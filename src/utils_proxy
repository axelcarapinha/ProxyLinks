#!/bin/bash
# Handles proxy settings modification

source utils_general

#######################################
# ENABLE system proxy settings 
# considering the config.conf 
# (in case the settings are OFF)
#
# Globals:
#   PORT (of the )
#	HOST
# Returns:
# 	Exit status 
#######################################
function proxy_start() {
	[[ VERBOSE -eq 1 ]] && echo "Setting..."

	# Allow the settings
	if ((in_docker_container || SESSION_ONLY_PROXY == 1)); then
		export HTTP_PROXY=socks5://"$HOST":"$PORT"
		export HTTPS_PROXY=socks5://"$HOST":"$PORT"
	else 
		gsettings set org.gnome.system.proxy mode 'manual';
		gsettings set org.gnome.system.proxy.socks ${PROXY_VARS[$PROXY_PORT_IDX]} $PORT 
		gsettings set org.gnome.system.proxy.socks ${PROXY_VARS[$PROXY_HOST_IDX]} $HOST
	fi 

	local readonly settings_status=$?
	if [[ "$settings_status" -ne 0 ]]; then
		log_error "Error changing the settings at proxy start"
		return "$settings_status"
	fi

	#TODO fix this
	# SOCK ssh connection for encrypted traffic 
	ssh -i "$SSH_PRIVATE_KEY_PATH" \
    -o "ProxyCommand=nc -X connect -x $HOST_IP:$HOST_PORT %h %p" \
    "$SERVER_USERNAME@$SERVER_IP"

	# ssh -i "$SSH_PRIVATE_KEY_PATH" -D "$HOST_PORT" -C -q -N "$SERVER_USERNAME"@"$SERVER_IP" 
	local readonly ssh_status=$?
	if [[ "$ssh_status" -ne 0 ]]; then
		log_error "Error when connecting via SSH to the proxy server"
		return "$ssh_status"
	fi

	return 0;
}


#######################################
# Disable system / session proxy settings
#
# Globals:
#   None
# Arguments:
#	Confirmation for the reset settings option
# Returns:
# 	Exit status
#######################################
function proxy_reset() {

	exec_reset() { # execute the reset operation itself
		[[ VERBOSE -eq 1 ]] && echo "Resetting proxy settings..."
		if ((in_docker_container || SESSION_ONLY_PROXY == 1)); then
			unset HTTP_PROXY
			unset HTTPS_PROXY
		else 
        	change_status=$(gsettings set org.gnome.system.proxy mode 'none'); 
			return "$change_status"
		fi 
    }

	local user_wants_reset=${1:-"-n"}
    if [[ "$user_wants_reset" =~ -[yY] ]]; then
        exec_reset
    else 
        read -p $'\n'"Are you sure? [y/n] " answer
        if [[ "$answer" =~ [yY] ]]; then    
			local reset_status=$(exec_reset)
            if [[ reset_status -ne 0 ]]; then
				log_error "Error reseting the proxy settings." "$reset_status"
			fi
        else
			[[ VERBOSE -eq 1 ]] && echo "Did NOT reset the proxy settings." 
		fi
    fi

	return 0;
}


#######################################
# Prompts the current proxy settings of
# the gnome environment
#
# Globals:
#   None
# Arguments:
# 	None	
# Returns:
#	true if the connection succeeded 
#   false otherwise
#######################################
function proxy_verify_settings() {
	[[ VERBOSE -eq 1 ]] && echo "Verifying..."

	if [[ in_docker_container || SESSION_ONLY_PROXY -eq 1 ]]; then
		echo HTTP_PROXY=socks5://"$HOST":"$PORT"
		echo HTTPS_PROXY=socks5://"$HOST":"$PORT"
	else 
		for property in "${PROXY_VARS[@]}"; do
			echo " $property = $(gsettings get org.gnome.system.proxy.socks "$property")"
		done
	fi 
}